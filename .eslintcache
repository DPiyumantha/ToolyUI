[{"D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\index.js":"1","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\reportWebVitals.js":"2","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\App.js":"3","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\Bmi.js":"4","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\ELibrary.js":"5","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\MonthSav.js":"6","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\ToDo.js":"7","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\FD.js":"8","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\Home.js":"9","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\FormikDemo.js":"10","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\Card.js":"11","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\SavingsAccount.js":"12","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\colors.js":"13"},{"size":500,"mtime":1607332167305,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607332167305,"results":"16","hashOfConfig":"15"},{"size":3233,"mtime":1608367442098,"results":"17","hashOfConfig":"15"},{"size":3938,"mtime":1608370541564,"results":"18","hashOfConfig":"15"},{"size":177,"mtime":1607332801998,"results":"19","hashOfConfig":"15"},{"size":177,"mtime":1607445836224,"results":"20","hashOfConfig":"15"},{"size":163,"mtime":1607445909107,"results":"21","hashOfConfig":"15"},{"size":5132,"mtime":1608370525741,"results":"22","hashOfConfig":"15"},{"size":3480,"mtime":1607446214493,"results":"23","hashOfConfig":"15"},{"size":1715,"mtime":1607353986332,"results":"24","hashOfConfig":"15"},{"size":1480,"mtime":1607445301147,"results":"25","hashOfConfig":"15"},{"size":4940,"mtime":1608369730206,"results":"26","hashOfConfig":"15"},{"size":45,"mtime":1608368858895,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1m6hsoe",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\index.js",[],["61","62"],"D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\reportWebVitals.js",[],"D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\App.js",[],"D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\Bmi.js",["63"],"\r\nimport React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { InputLabel, FormHelperText, Input } from \"@material-ui/core\";\r\nimport { Colors } from \"../colors\";\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n];\r\n\r\nfunction BMI() {\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n  const [formData, setFormData] = useState({\r\n    heightValcm: \"\",\r\n    massValkg: \"\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ margin: \"auto\", width: \"80%\" }}>\r\n      <h1 style={{ textAlign: \"center\" }}>Calculate BMI</h1>\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            margin: \"auto\",\r\n            width: \"50%\",\r\n          }}\r\n        >\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"heightValcm\">Height in cm</InputLabel>\r\n            <Input\r\n              id=\"heightValcm\"\r\n              value={formData.heightValcm}\r\n              onChange={(v) =>\r\n                setFormData({ ...formData, heightValcm: Number(v.target.value) })\r\n              }\r\n            />\r\n            {/* <FormHelperText id=\"my-helper-text\">\r\n              We'll never share your email.\r\n            </FormHelperText> */}\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"massValkg\">Mass in kg </InputLabel>\r\n            <Input\r\n              id=\"massValkg\"\r\n              value={formData.massValkg}\r\n              onChange={(v) =>\r\n                setFormData({ ...formData, massValkg: Number(v.target.value) })\r\n              }\r\n            />\r\n          </FormControl>\r\n          \r\n\r\n          <Button\r\n            style={{\r\n              color: \"white\",\r\n              width: 100,\r\n              marginTop: 25,\r\n              marginBottom: 25,\r\n              background: Colors.MAIN,\r\n            }}\r\n            onClick={() => console.log(formData)}\r\n          >\r\n            Calculate\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <div style={{ marginTop: 25 }}>\r\n        Past Calculations\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow style={{ background: Colors.MAIN, color: \"white\" }}>\r\n                <TableCell style={{ color: \"white\" }}>BMI</TableCell>\r\n                <TableCell style={{ color: \"white\" }}>Height in cm</TableCell>\r\n                <TableCell style={{ color: \"white\" }}>Mass in kg</TableCell>\r\n                \r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell>{row.calories}</TableCell>\r\n                  <TableCell>{row.calories}</TableCell>\r\n                  \r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BMI;\r\n","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\ELibrary.js",["64"],"import react from 'react';\r\n\r\nfunction ELibrary (){\r\n\r\n    return(\r\n\r\n        <div>\r\n            <h1>E books Library</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ELibrary;","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\MonthSav.js",["65"],"D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\ToDo.js",["66"],"import react from 'react';\r\n\r\nfunction ToDo (){\r\n\r\n    return(\r\n\r\n        <div>\r\n            <h1>Todo List</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ToDo;","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\FD.js",["67"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { InputLabel, FormHelperText, Input } from \"@material-ui/core\";\r\nimport { Colors } from \"../colors\";\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n];\r\n\r\nfunction SavingsAccount() {\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n  const [formData, setFormData] = useState({\r\n    principalAmnt: \"\",\r\n    intRate: \"\",\r\n    mntPeriod: \"\",\r\n    wht: \"\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ margin: \"auto\", width: \"80%\" }}>\r\n      <h1 style={{ textAlign: \"center\" }}>Calculate Interest for Fixed Deposits with Principle Capitalized</h1>\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            margin: \"auto\",\r\n            width: \"50%\",\r\n          }}\r\n        >\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"principalAmnt\">Principal Amount</InputLabel>\r\n            <Input\r\n              id=\"principalAmnt\"\r\n              value={formData.principalAmnt}\r\n              onChange={(v) =>\r\n                setFormData({ ...formData, principalAmnt: Number(v.target.value) })\r\n              }\r\n            />\r\n            {/* <FormHelperText id=\"my-helper-text\">\r\n              We'll never share your email.\r\n            </FormHelperText> */}\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"intRate\">Annual Interest Rate </InputLabel>\r\n            <Input\r\n              id=\"intRate\"\r\n              value={formData.intRate}\r\n              onChange={(v) =>\r\n                setFormData({ ...formData, intRate: Number(v.target.value) })\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"mntPeriod\">Number of Years </InputLabel>\r\n            <Input\r\n              id=\"mntPeriod\"\r\n              value={formData.mntPeriod}\r\n              onChange={(v) =>\r\n                setFormData({ ...formData, mntPeriod: Number(v.target.value) })\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"wht\">Withholding Tax </InputLabel>\r\n            <Input\r\n              id=\"wht\"\r\n              value={formData.wht}\r\n              onChange={(v) =>\r\n                setFormData({ ...formData, wht: Number(v.target.value) })\r\n              }\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            style={{\r\n              color: \"white\",\r\n              width: 100,\r\n              marginTop: 25,\r\n              marginBottom: 25,\r\n              background: Colors.MAIN,\r\n            }}\r\n            onClick={() => console.log(formData)}\r\n          >\r\n            Calculate\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <div style={{ marginTop: 25 }}>\r\n        Past Calculations\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow style={{ background: Colors.MAIN, color: \"white\" }}>\r\n                <TableCell style={{ color: \"white\" }}>Total Amount</TableCell>\r\n                <TableCell style={{ color: \"white\" }}>Total Interest on Maturity</TableCell>\r\n                <TableCell style={{ color: \"white\" }}>Principal Amount</TableCell>\r\n                <TableCell style={{ color: \"white\" }}>No. of Years</TableCell>\r\n                <TableCell style={{ color: \"white\" }}>Interest Rate</TableCell>\r\n                <TableCell style={{ color: \"white\" }}>WHT</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell>{row.calories}</TableCell>\r\n                  <TableCell>{row.calories}</TableCell>\r\n                  <TableCell>{row.fat}</TableCell>\r\n                  <TableCell>{row.carbs}</TableCell>\r\n                  <TableCell>{row.protein}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavingsAccount;","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\Home.js",[],"D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\FormikDemo.js",[],"D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\Card.js",["68","69"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 200,\r\n    minWidth:200,\r\n    margin:10,\r\n    minHeight:350,\r\n    \r\n  },\r\n  media: {\r\n    height: 160,\r\n    paddingTop:10,\r\n\r\n  },\r\n});\r\n\r\nexport default function MediaCard({title, path}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Link to={path} style={{textDecoration:'none'}}>\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ-4hZAqa7x13iVSmDwcfFSz3n-M1JmWJChyQ&usqp=CAU'\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      \r\n    </Card>\r\n    </Link>\r\n  );\r\n}\r\n","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\components\\SavingsAccount.js",["70"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { InputLabel, FormHelperText, Input } from \"@material-ui/core\";\r\nimport { Colors } from \"../colors\";\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n  createData(10000, 159, 6.0, 24, 4.0),\r\n];\r\n\r\nfunction SavingsAccount() {\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n  const [formData, setFormData] = useState({\r\n    mntAmnt: \"\",\r\n    mntIntRate: \"\",\r\n    mntPeriod: \"\",\r\n    wht: \"\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ margin: \"auto\", width: \"80%\" }}>\r\n      <h1 style={{ textAlign: \"center\" }}>Calculate Total Monthly Savings</h1>\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            margin: \"auto\",\r\n            width: \"50%\",\r\n          }}\r\n        >\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"mntAmnt\">Monthly Saving Amount</InputLabel>\r\n            <Input\r\n              id=\"mntAmnt\"\r\n              value={formData.mntAmnt}\r\n              onChange={(v) =>\r\n                setFormData({ ...formData, mntAmnt: Number(v.target.value) })\r\n              }\r\n            />\r\n            {/* <FormHelperText id=\"my-helper-text\">\r\n              We'll never share your email.\r\n            </FormHelperText> */}\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"mntIntRate\">Annual Interest Rate </InputLabel>\r\n            <Input\r\n              id=\"mntIntRate\"\r\n              value={formData.mntIntRate}\r\n              onChange={(v) =>\r\n                setFormData({ ...formData, mntIntRate: Number(v.target.value) })\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"mntPeriod\">Number of Months </InputLabel>\r\n            <Input\r\n              id=\"mntPeriod\"\r\n              value={formData.mntPeriod}\r\n              onChange={(v) =>\r\n                setFormData({ ...formData, mntPeriod: Number(v.target.value) })\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"wht\">Withholding Tax </InputLabel>\r\n            <Input\r\n              id=\"wht\"\r\n              value={formData.wht}\r\n              onChange={(v) =>\r\n                setFormData({ ...formData, wht: Number(v.target.value) })\r\n              }\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            style={{\r\n              color: \"white\",\r\n              width: 100,\r\n              marginTop: 25,\r\n              marginBottom: 25,\r\n              background: Colors.MAIN,\r\n            }}\r\n            onClick={() => console.log(formData)}\r\n          >\r\n            Calculate\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <div style={{ marginTop: 25 }}>\r\n        Past Calculations\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow style={{ background: Colors.MAIN, color: \"white\" }}>\r\n                <TableCell style={{ color: \"white\" }}>Total Amount</TableCell>\r\n                <TableCell style={{ color: \"white\" }}>Monthly Saving</TableCell>\r\n                <TableCell style={{ color: \"white\" }}>No. of Months</TableCell>\r\n                <TableCell style={{ color: \"white\" }}>Interest Rate</TableCell>\r\n                <TableCell style={{ color: \"white\" }}>WHT</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell>{row.calories}</TableCell>\r\n                  <TableCell>{row.fat}</TableCell>\r\n                  <TableCell>{row.carbs}</TableCell>\r\n                  <TableCell>{row.protein}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavingsAccount;\r\n","D:\\G\\IIT\\Cloud Computing\\CACW\\CACW Frontend\\cacw\\src\\colors.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":14,"column":22,"nodeType":"77","messageId":"78","endLine":14,"endColumn":36},{"ruleId":"75","severity":1,"message":"79","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"79","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"79","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":13,"column":22,"nodeType":"77","messageId":"78","endLine":13,"endColumn":36},{"ruleId":"75","severity":1,"message":"80","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":19},{"ruleId":"75","severity":1,"message":"81","line":8,"column":8,"nodeType":"77","messageId":"78","endLine":8,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":13,"column":22,"nodeType":"77","messageId":"78","endLine":13,"endColumn":36},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'FormHelperText' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]